[{"categories":null,"contents":"Sometimes when you\u0026rsquo;re developing or debugging locally you need access to resources that are exposed to your cluster.\nTypically, most organisations use VPN\u0026rsquo;s to enable you to access these resources, but there\u0026rsquo;s a much easier way.\nSocat. The alpine/socat image is perfect for enabling backdoor access to private or internal services that are available to your cluster without having to set up and manage VPN\u0026rsquo;s.\nHow it works is pretty simple. We run a socat pod exposing a service that\u0026rsquo;s viewable by the pod but not by us.\nWe then run a kubectl port-forward to expose the socat forward.\nAt this point we now have access to the private service locally.\nexport PORT=5432 export ADDR=postgres export PODNAME=backdoor kubectl run --restart=Never --image=alpine/socat ${PODNAME} -- -d -d tcp-listen:${PORT},fork,reuseaddr tcp-connect:${ADDR}:${PORT} kubectl wait --for=condition=Ready pod/${PODNAME} kubectl port-forward pod/${PODNAME} ${PORT}:${PORT} You don\u0026rsquo;t need to do use socat As most of you will probably be aware using socat to expose services like this is a bit overkill, you can simply use ExternalName services instead and port-forward that.\nexport PORT=5432 export ADDR=postgres export SERVICE_NAME=backdoor cat \u0026lt;\u0026lt;EOF | kubectl create -f - kind: Service apiVersion: v1 metadata: name: ${SERVICE_NAME} spec: type: ExternalName externalName: ${ADDR} EOF kubectl port-forward service/${SERVICE_NAME} ${PORT}:${PORT} ","date":"January 22, 2021","hero":"/posts/socat/hero.jpg","permalink":"https://mgazza.github.io/posts/socat/","summary":"Sometimes when you\u0026rsquo;re developing or debugging locally you need access to resources that are exposed to your cluster.\nTypically, most organisations use VPN\u0026rsquo;s to enable you to access these resources, but there\u0026rsquo;s a much easier way.\nSocat. The alpine/socat image is perfect for enabling backdoor access to private or internal services that are available to your cluster without having to set up and manage VPN\u0026rsquo;s.\nHow it works is pretty simple.","tags":null,"title":"Using socat to backdoor via kubernetes"}]